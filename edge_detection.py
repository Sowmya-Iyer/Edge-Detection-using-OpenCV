# -*- coding: utf-8 -*-
"""Edge Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ofrRRiYAVImPMtOEajSRuoqBInzIf_61
"""

import numpy as np
import cv2
from matplotlib import pyplot as plt
import matplotlib.image as mpimg
import matplotlib.pyplot as plt

# Parameters for our graph; we'll output images in a 4x4 configuration
nrows = 1
ncols = 1
sp = plt.subplot(nrows, ncols, 1)
sp.axis('Off') 
img = mpimg.imread('D.png')
plt.imshow(img)

plt.show()

img2 = mpimg.imread('D284.jpg')
sp.axis('Off') 
plt.imshow(img2)

plt.show()

img = cv2.imread('D.png',0)
# Initiate STAR detector
orb = cv2.ORB_create()

# find the keypoints with ORB
kp = orb.detect(img,None)

# compute the descriptors with ORB
kp, des = orb.compute(img, kp)
img2 = cv2.merge([img, img, img])
# draw only keypoints location,not size and orientation
img2 = cv2.drawKeypoints(img,kp,outImage = img2,color=(0,255,0), flags=0)
plt.imshow(img2),plt.axis('off'),plt.show()
import cv2
import numpy as np
# from matplotlib import pyplot as plt

edges = cv2.Canny(img,100,200)

plt.subplot(121),plt.imshow(img,cmap = 'gray')
plt.title('Original Image'), plt.xticks([]), plt.yticks([])
plt.subplot(122),plt.imshow(edges,cmap = 'gray')
plt.title('Edge Image'), plt.xticks([]), plt.yticks([])

plt.show()

img = cv2.imread('D284.jpg',0)
# Initiate STAR detector
orb = cv2.ORB_create()

# find the keypoints with ORB
kp = orb.detect(img,None)

# compute the descriptors with ORB
kp, des = orb.compute(img, kp)
img2 = cv2.merge([img, img, img])
# draw only keypoints location,not size and orientation
img2 = cv2.drawKeypoints(img,kp,outImage = img2,color=(0,255,0), flags=0)
plt.imshow(img2),plt.axis('off'),plt.show()

edges = cv2.Canny(img,100,200)

plt.subplot(121),plt.imshow(img,cmap = 'gray')
plt.title('Original Image'), plt.xticks([]), plt.yticks([])
plt.subplot(122),plt.imshow(edges,cmap = 'gray')
plt.title('Edge Image'), plt.xticks([]), plt.yticks([])

plt.show()